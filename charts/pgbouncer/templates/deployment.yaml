apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pgbouncer.fullname" . }}
  labels:
    {{- include "pgbouncer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "pgbouncer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pgbouncer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pgbouncer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.metrics.enabled }}
        - name: {{ .Chart.Name }}-metrics
          image: "spreaker/prometheus-pgbouncer-exporter:2.1.1"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9100
              protocol: TCP
          env:
            {{- range $key, $val := .Values.metrics.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: postgres
            periodSeconds: 60
          readinessProbe:
            tcpSocket:
              port: postgres
          lifecycle:
            preStop:
              exec:
                # Allow existing queries clients to complete within 120 seconds
                command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: secret
              subPath: userlist.txt
              mountPath: /etc/pgbouncer/userlist.txt
              readOnly: true
            - name: secret
              subPath: pgbouncer.ini
              mountPath: /etc/pgbouncer/pgbouncer.ini
              readOnly: true
      volumes:
        - name: secret
          secret:
            secretName: {{ include "pgbouncer.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
