# Default values for chaskiq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: chaskiq/chaskiq
  pullPolicy: IfNotPresent
  tag: ""

# This will create a secrets templates
# set as false after first run if you do nto want to overwrite your secrets.
secrets:
  enabled: false

env:
  # when defined in Secret comment it here
  # DATABASE_URL: "postgresql://pghost:port/chaskiq"
  REDIS_URL: "redis://chaskiq-redis-headless:6379"
  HOST: https://your.app.host.com
  WS: wss://your.app.host.com/cable
  ADMIN_EMAIL: youradmin@email.com
  AWS_S3_BUCKET: chaskiq-vl
  AWS_S3_REGION: eu-west-3
  SES_ADDRESS: email-smtp.eu-west-3.amazonaws.com
  # SNS_CONFIGURATION_SET: "chaskiq-set"
  DEFAULT_SENDER_EMAIL: "chaskiq@domain.com"
  DEFAULT_OUTGOING_EMAIL_DOMAIN: "support@domain.com"
  # DEFAULT_GEOCODER_SERVICE: defaults to maxmind_local
  LANG: "en_US.UTF-8"
  RAILS_ENV: production
  RACK_ENV: production
  RAILS_LOG_TO_STDOUT: "true"
  RAILS_SERVE_STATIC_FILES: "true"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

httpproxy:
  enabled: false
  host: domain.com
  certType: prod

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  enabled: true
  auth:
    enabled: false
  architecture: standalone
  master:
    kind: Deployment
    resources:
      limits:
        cpu: 200m
        memory: 64Mi
      requests:
        cpu: 100m
        memory: 32Mi
